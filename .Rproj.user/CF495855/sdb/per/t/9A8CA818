{
    "contents" : "---\ntitle: \"Melate Project\"\nsubtitle: \"7 random variables\"\nauthor: \"Pedro M?rquez\"\ndate: \"July 27, 2015\"\noutput: html_document\n---\n\n----------\n##Load Libraries\n```{r, echo=TRUE}\nlibrary(corrgram)\nlibrary(stats)\nlibrary(graphics)\nlibrary(ggplot2)\nlibrary(moments)\nlibrary(MASS)\nlibrary(vcd)\nlibrary(data.table)\nlibrary(fitdistrplus)\nlibrary(logspline)\n```\n\n##Set Working Directory\n```{r, echo=TRUE}\nsetwd(\"C:/Users/TOSHIBA/Desktop/Marquez - Melate\")\n```\n\n##Load Data\n```{r, echo=TRUE}\nurl <- \"http://www.pronosticos.gob.mx/Historicos/Melate.csv\"\nM <- read.csv(\"melate.csv\")\nhead(M)\ndim(M)\n```\n\n#Subset Results\n```{r, echo=TRUE}\nR <- subset(M, select=c(\"R1\",\"R2\", \"R3\", \"R4\", \"R5\", \"R6\", \"R7\"))\nhead(R)\nplot(R)\n\ndt <- data.table(c(0,0,0,0,0,0),c(0,0,0,0,0,0), \n                 c(0,0,0,0,0,0),c(\"\",\"\",\"\",\"\",\"\",\"\"),\n                 c(0,0,0,0,0,0),c(\"\",\"\",\"\",\"\",\"\",\"\"))\nsetnames(dt,c(\"mean\",\"sd\",\"skewness\",\" \",\"kurtosis\",\" \"))\n\ngt <- data.table(c(0,0,0,0,0,0),c(0,0,0,0,0,0), \n                    c(0,0,0,0,0,0))\nsetnames(gt,c(\"Game 1\",\"Game 2\",\"Game 3\"))\n```\n\n##Analysing R\n\nIt looks like it is Gaussian: $$f(x;\\mu,\\lambda) = \\frac{1}{\\sigma \\sqrt{2\\pi}} \\exp^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}$$, $\\mu$, $Var[X]=\\sigma^2$\n\n```{r, echo=TRUE}\ni <- 1\nfor(r in c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\", \"R6\")){\nx <- R[,r]\n    \nhist(x, main=r, prob=TRUE, col=\"lightgrey\")\nlines(density(x, adjust=2), col=\"blue\", lwd=2) \n\nm <- mean(x)\ns <- sd(x)\n\ndt[i,1] <- m\ndt[i,2] <- s\n\nn <- length(x)\n\ndt[i,3] <- sk <- skewness(x)\nif(sk > 0)\n    dt[i,4] <- \"right\"\nelse if (sk < 0)\n    dt[i,4] <- \"left\"\nelse\n    dt[i,4] <- \"symmetrical\"\n\ndt[i,5] <- ku <- kurtosis(x)\nif(ku > 3)\n    dt[i,6] <- \"sharper\"\nelse if (ku < 3)\n    dt[i,6] <- \"flatter\"\nelse\n    dt[i,6] <- \"like normal\"\n\n\ni <- i +1\n\ndescdist(x, discrete = FALSE)\n}\nprint(dt)\n```\n\n##Fitting R1: Beta\n```{r,echo=TRUE}\n#Beta uses values in [0,1]\nx <- R$R1/(max(R$R1) + 0.0001)\n\nfit <- fitdist(x, \"beta\")\nprint(fit)\nfit$aic\nplot(fit)\n\np <- qplot(x, geom = \"density\",colour = I(\"blue\"))\nstat <- stat_function(aes(x = x, y = ..y..), \n                      fun = dbeta,\n                      lwd=2,\n                      colour=\"red\", n = 100, \n                      args = list(shape1 = fit$estimate[\"shape1\"],\n                                  shape2 = fit$estimate[\"shape2\"]))\np + stat\n\nset.seed( as.integer((as.double(Sys.time())*1000+Sys.getpid()) %% 2^31) )\nn <- round(rbeta(3,shape1 = fit$estimate[\"shape1\"],\n        shape2 = fit$estimate[\"shape2\"])*(max(R$R1) + 0.0001))\n\nfor(i in 1:3) gt[1,i] <- n[i]\n\n```\n\n##Fitting R2: Beta\n```{r,echo=TRUE}\n#Beta uses values in [0,1]\nx <- R$R2/(max(R$R2) + 0.0001)\n\nfit <- fitdist(x, \"beta\")\nprint(fit)\nfit$aic\nplot(fit)\n\np <- qplot(x, geom = \"density\",colour = I(\"blue\"))\nstat <- stat_function(aes(x = x, y = ..y..), \n                      fun = dbeta,\n                      lwd=2,\n                      colour=\"red\", n = 100, \n                      args = list(shape1 = fit$estimate[\"shape1\"],\n                                  shape2 = fit$estimate[\"shape2\"]))\np + stat\n\n#set.seed( as.integer((as.double(Sys.time())*1000+Sys.getpid()) %% 2^31) )\nn <- round(rbeta(3,shape1 = fit$estimate[\"shape1\"],\n        shape2 = fit$estimate[\"shape2\"])*(max(R$R2) + 0.0001))\n\nfor(i in 1:3) gt[2,i] <- n[i]\n```\n\n##Fitting R3: Gamma\n```{r,echo=TRUE}\nx <- R$R3\n\nfit <- fitdist(x, \"gamma\")\nprint(fit)\nfit$aic\nplot(fit)\n\np <- qplot(x, geom = \"density\",colour = I(\"blue\"))\nstat <- stat_function(aes(x = x, y = ..y..), \n                      fun = dgamma,\n                      lwd=2,\n                      colour=\"red\", n = 100, \n                      args = list(shape = fit$estimate[\"shape\"],\n                                  rate = fit$estimate[\"rate\"]))\np + stat\n\n#set.seed( as.integer((as.double(Sys.time())*1000+Sys.getpid()) %% 2^31) )\nn <- round(rgamma(3,shape = fit$estimate[\"shape\"],\n        rate = fit$estimate[\"rate\"]))\n\nfor(i in 1:3) gt[3,i] <- n[i]\n```\n\n##Fitting R4: Normal\n```{r,echo=TRUE}\nx <- R$R4\n\nfit <- fitdist(x, \"norm\")\nprint(fit)\nfit$aic\nplot(fit)\n\np <- qplot(x, geom = \"density\",colour = I(\"blue\"))\nstat <- stat_function(aes(x = x, y = ..y..), \n                      fun = dnorm,\n                      lwd=2,\n                      colour=\"red\", n = 100, \n                      args = list(mean = fit$estimate[\"mean\"],\n                                  sd = fit$estimate[\"sd\"]))\np + stat\n\n#set.seed( as.integer((as.double(Sys.time())*1000+Sys.getpid()) %% 2^31) )\nn <- round(rnorm(3,mean = fit$estimate[\"mean\"],\n        sd = fit$estimate[\"sd\"]))\n\nfor(i in 1:3) gt[4,i] <- n[i]\n```\n\n##Fitting R5: Normal\n```{r,echo=TRUE}\nx <- R$R5\n\nfit <- fitdist(x, \"norm\")\nprint(fit)\nfit$aic\nplot(fit)\n\np <- qplot(x, geom = \"density\",colour = I(\"blue\"))\nstat <- stat_function(aes(x = x, y = ..y..), \n                      fun = dnorm,\n                      lwd=2,\n                      colour=\"red\", n = 100, \n                      args = list(mean = fit$estimate[\"mean\"],\n                                  sd = fit$estimate[\"sd\"]))\np + stat\n\n#set.seed( as.integer((as.double(Sys.time())*1000+Sys.getpid()) %% 2^31) )\nn <- round(rnorm(3,mean = fit$estimate[\"mean\"],\n        sd = fit$estimate[\"sd\"]))\n\nfor(i in 1:3) gt[5,i] <- n[i]\n\n```\n\n##Fitting R6: Normal\n```{r,echo=TRUE}\nx <- R$R6\n\nfit <- fitdist(x, \"norm\")\nprint(fit)\nfit$aic\nplot(fit)\n\np <- qplot(x, geom = \"density\",colour = I(\"blue\"))\nstat <- stat_function(aes(x = x, y = ..y..), \n                      fun = dnorm,\n                      lwd=2,\n                      colour=\"red\", n = 100, \n                      args = list(mean = fit$estimate[\"mean\"],\n                                  sd = fit$estimate[\"sd\"]))\np + stat\n\n#set.seed( as.integer((as.double(Sys.time())*1000+Sys.getpid()) %% 2^31) )\nn <- round(rnorm(3,mean = fit$estimate[\"mean\"],\n        sd = fit$estimate[\"sd\"]))\n\nfor(i in 1:3) gt[6,i] <- n[i]\n\n```\n\n\nLet's verify that `Ri` is Gauss. We check if $\\sqrt{n}(\\overline{X}-\\mu)/\\sigma$ has normal distribution, for $\\sigma$,and $\\mu$.\n\n```{r,echo=F,eval=F}\nnosim <- 1000\n\ncfunc <- function(x, n) {sqrt(n)*(mean(x) - m)/s}\n\ndat <- data.frame(\n    x = c(apply(matrix(rnorm(10*nosim,mean=m,sd=s),nosim), \n                1, cfunc, 10),\n          apply(matrix(rnorm(20*nosim,mean=m,sd=s),nosim), \n                1, cfunc, 20),\n          apply(matrix(rnorm(30*nosim,mean=m,sd=s),nosim), \n                1, cfunc, 30)\n          ),\n    size = factor(rep(c(10, 20, 30), rep(nosim, 3)))\n    )\n\ng <- ggplot(dat, aes(x = x, fill = size)) +\n    geom_histogram(binwidth=0.3, colour = \"black\", \n                   aes(y = ..density..)) +\n    facet_grid(. ~ size) +\n    stat_function(fun = dnorm, size = 2)\nplot(g)\n```\n\n##Play\n```{r,echo=TRUE}\nprint(gt)\n```\n\n",
    "created" : 1443304763898.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "455348840",
    "id" : "9A8CA818",
    "lastKnownWriteTime" : 1443306940,
    "path" : "C:/Users/TOSHIBA/Desktop/Marquez - Melate/melate2.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_markdown"
}